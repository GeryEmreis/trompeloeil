linux_task:
  container:
    dockerfile: .cirrus-docker/Dockerfile
  env:
    matrix:
      - COMPILER: g++-10
        CXXSTD: 11
        SANITIZE: true

      - COMPILER: g++-10
        CXXSTD: 14
        SANITIZE: true

      - COMPILER: g++-10
        CXXSTD: 17
        SANITIZE: true

      - COMPILER: g++-10
        CXXSTD: 20
        SANITIZE: true

      - COMPILER: g++-9
        CXXSTD: 11
        SANITIZE: true

      - COMPILER: g++-9
        CXXSTD: 14
        SANITIZE: true

      - COMPILER: g++-9
        CXXSTD: 17
        SANITIZE: true

      - COMPILER: g++-8
        CXXSTD: 11
        SANITIZE: true

      - COMPILER: g++-8
        CXXSTD: 14
        SANITIZE: true

      - COMPILER: g++-8
        CXXSTD: 17
        SANITIZE: true

      - COMPILER: g++-7
        CXXSTD: 11
        SANITIZE: true

      - COMPILER: g++-7
        CXXSTD: 14
        SANITIZE: true

      - COMPILER: g++-7
        CXXSTD: 17
        SANITIZE: true

      - COMPILER: g++-6
        CXXSTD: 11
        SANITIZE: true

      - COMPILER: g++-6
        CXXSTD: 14
        SANITIZE: true

      - COMPILER: g++-6
        CXXSTD: 17
        SANITIZE: true

      - COMPILER: g++-5
        CXXSTD: 11
        SANITIZE: true

      - COMPILER: g++-5
        CXXSTD: 14
        SANITIZE: true

      - COMPILER: g++-5
        CXXSTD: 17
        SANITIZE: true

      - COMPILER: g++-4.9
        CXXSTD: 11
        SANITIZE: true

      - COMPILER: g++-4.9
        CXXSTD: 14
        SANITIZE: true

      - COMPILER: g++-4.8
        CXXSTD: 11
        SANITIZE: false

      - COMPILER: clang++-10
        CXXSTD: 20
        STDLIB: libstdc++
        SANITIZE: true

      - COMPILER: clang++-10
        CXXSTD: 20
        STDLIB: libc++
        SANITIZE: true

      - COMPILER: clang++-10
        CXXSTD: 17
        STDLIB: libstdc++
        SANITIZE: true

      - COMPILER: clang++-10
        CXXSTD: 17
        STDLIB: libc++
        SANITIZE: true

      - COMPILER: clang++-10
        CXXSTD: 14
        STDLIB: libstdc++
        SANITIZE: true

      - COMPILER: clang++-10
        CXXSTD: 14
        STDLIB: libc++
        SANITIZE: true

      - COMPILER: clang++-10
        CXXSTD: 11
        STDLIB: libstdc++
        SANITIZE: true

      - COMPILER: clang++-10
        CXXSTD: 11
        STDLIB: libc++
        SANITIZE: true

      - COMPILER: clang++-9
        CXXSTD: 17
        STDLIB: libstdc++
        SANITIZE: false

      - COMPILER: clang++-9
        CXXSTD: 17
        STDLIB: libstdc++
        SANITIZE: true

      - COMPILER: clang++-9
        CXXSTD: 17
        STDLIB: libc++
        SANITIZE: false

      - COMPILER: clang++-9
        CXXSTD: 17
        STDLIB: libc++
        SANITIZE: true

  build_script:
    - CXX=${COMPILER} CXXFLAGS=-std=c++${CXXSTD} ./check_errors.sh || {
        FAILURES="$?" ;
        if [[ ${CXXSTD} == "11" ]]; then
          if [[ ${FAILURES} != "4" ]]; then
            echo "Expected four failures from C++11 check_errors.sh, got ${FAILURES}" ;
            exit 1 ;
          fi ;
        else
          echo "Expected zero failures from check_errors.sh, got ${FAILURES}" ;
          exit 1 ;
        fi ;
      }
    - mkdir build
    - cd build
    - CXX=${COMPILER} cmake -DCMAKE_BUILD_TYPE=Debug -DCOVERALLS_ID='${CIRRUS_TASK_ID}' -DCMAKE_EXE_LINKER_FLAGS="${LDFLAGS}" -DCMAKE_CXX_STANDARD=${CXXSTD} -DCXX_STDLIB=${STDLIB} -DSANITIZE=${SANITIZE} ..
    - make VERBOSE=1 self_test
    - make VERBOSE=1 custom_recursive_mutex
  test_script:
    - cd build
    - make run_self_test
    - make run_coverage || true
